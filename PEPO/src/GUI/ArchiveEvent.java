
package GUI;

import Logic.LogicController;

/*
 * @author kuan
 */
public class ArchiveEvent extends javax.swing.JDialog {

    /** Creates new form ArchiveEvent */
    public ArchiveEvent(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        GUIUpdater.updateUnarchivedTable();
        GUIUpdater.updateArchivedTable();
        UnarchiveButton.setVisible(false);
        ArchiveButton.setVisible(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ArchiveEventBackground = new javax.swing.JPanel();
        ArchiveEventButton = new javax.swing.JButton();
        ArchivedTableBackground = new javax.swing.JScrollPane();
        ArchivedTable = new javax.swing.JTable();
        ArchiveButton = new javax.swing.JButton();
        UnarchiveButton = new javax.swing.JButton();
        UnarchivedTableBackground = new javax.swing.JScrollPane();
        UnarchivedTable = new javax.swing.JTable();
        NameLabel = new javax.swing.JLabel();
        NameLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        ArchiveEventBackground.setBackground(new java.awt.Color(227, 227, 227));
        ArchiveEventBackground.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));
        ArchiveEventBackground.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ArchiveEventButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/submitbutton.png"))); // NOI18N
        ArchiveEventButton.setBorderPainted(false);
        ArchiveEventButton.setContentAreaFilled(false);
        ArchiveEventButton.setFocusPainted(false);
        ArchiveEventButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ArchiveEventButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ArchiveEventButtonMousePressed(evt);
            }
        });
        ArchiveEventButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                ArchiveEventButtonMouseMoved(evt);
            }
        });
        ArchiveEventButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ArchiveEventButtonActionPerformed(evt);
            }
        });
        ArchiveEventBackground.add(ArchiveEventButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 160, 38, 42));

        ArchivedTableBackground.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        ArchivedTable.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        ArchivedTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Event"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ArchivedTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        ArchivedTable.setFocusable(false);
        ArchivedTable.setGridColor(new java.awt.Color(255, 255, 255));
        ArchivedTable.setIntercellSpacing(new java.awt.Dimension(0, 0));
        ArchivedTable.setRowHeight(20);
        ArchivedTable.setSelectionBackground(new java.awt.Color(255, 204, 51));
        ArchivedTable.setSelectionForeground(new java.awt.Color(0, 0, 0));
        ArchivedTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        ArchivedTable.setTableHeader(null);
        ArchivedTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ArchivedTableMousePressed(evt);
            }
        });
        ArchivedTableBackground.setViewportView(ArchivedTable);
        ArchivedTable.getColumnModel().getColumn(0).setResizable(false);

        ArchiveEventBackground.add(ArchivedTableBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 40, 238, 150));

        ArchiveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/rightbutton.png"))); // NOI18N
        ArchiveButton.setBorderPainted(false);
        ArchiveButton.setContentAreaFilled(false);
        ArchiveButton.setFocusPainted(false);
        ArchiveButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ArchiveButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ArchiveButtonMousePressed(evt);
            }
        });
        ArchiveButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                ArchiveButtonMouseMoved(evt);
            }
        });
        ArchiveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ArchiveButtonActionPerformed(evt);
            }
        });
        ArchiveEventBackground.add(ArchiveButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 90, 38, 38));

        UnarchiveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/leftbutton.png"))); // NOI18N
        UnarchiveButton.setBorderPainted(false);
        UnarchiveButton.setContentAreaFilled(false);
        UnarchiveButton.setFocusPainted(false);
        UnarchiveButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                UnarchiveButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                UnarchiveButtonMousePressed(evt);
            }
        });
        UnarchiveButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                UnarchiveButtonMouseMoved(evt);
            }
        });
        UnarchiveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UnarchiveButtonActionPerformed(evt);
            }
        });
        ArchiveEventBackground.add(UnarchiveButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 90, 38, 38));

        UnarchivedTableBackground.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        UnarchivedTable.setFont(new java.awt.Font("Ubuntu", 0, 14));
        UnarchivedTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Event"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        UnarchivedTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        UnarchivedTable.setFocusable(false);
        UnarchivedTable.setGridColor(new java.awt.Color(255, 255, 255));
        UnarchivedTable.setIntercellSpacing(new java.awt.Dimension(0, 0));
        UnarchivedTable.setRowHeight(20);
        UnarchivedTable.setSelectionBackground(new java.awt.Color(255, 204, 51));
        UnarchivedTable.setSelectionForeground(new java.awt.Color(0, 0, 0));
        UnarchivedTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        UnarchivedTable.setTableHeader(null);
        UnarchivedTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                UnarchivedTableMousePressed(evt);
            }
        });
        UnarchivedTableBackground.setViewportView(UnarchivedTable);
        UnarchivedTable.getColumnModel().getColumn(0).setResizable(false);

        ArchiveEventBackground.add(UnarchivedTableBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 238, 150));

        NameLabel.setFont(new java.awt.Font("Ubuntu Bold", 0, 14));
        NameLabel.setText("Archived Events :");
        ArchiveEventBackground.add(NameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 20, -1, -1));

        NameLabel1.setFont(new java.awt.Font("Ubuntu Bold", 0, 14));
        NameLabel1.setText("Current Events :");
        ArchiveEventBackground.add(NameLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ArchiveEventBackground, javax.swing.GroupLayout.DEFAULT_SIZE, 606, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ArchiveEventBackground, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ArchiveEventButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ArchiveEventButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_ArchiveEventButtonActionPerformed

    private void ArchiveEventButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ArchiveEventButtonMouseExited
        ArchiveEventButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/submitbutton.png"))); 
    }//GEN-LAST:event_ArchiveEventButtonMouseExited

    private void ArchiveEventButtonMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ArchiveEventButtonMouseMoved
        int x = evt.getX();
        int y = evt.getY();
        double dx = ArchiveEventButton.getWidth()/2 - x;
        double dy = ArchiveEventButton.getHeight()/2 - y;
        double sr = Math.sqrt(dx*dx + dy*dy );
        if (sr <= ArchiveEventButton.getWidth()/2)
            ArchiveEventButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/submitbuttonhover.png")));
        else
            ArchiveEventButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/submitbutton.png")));
    }//GEN-LAST:event_ArchiveEventButtonMouseMoved

    private void ArchiveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ArchiveButtonActionPerformed
        if(UnarchivedTable.getSelectedRow() != -1) {
            LogicController.archiveEvent(LogicController.getEventList().get(UnarchivedTable.getSelectedRow()));
            GUIUpdater.updateArchivedTable();
            GUIUpdater.updateUnarchivedTable();
        }
    }//GEN-LAST:event_ArchiveButtonActionPerformed

    private void UnarchiveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UnarchiveButtonActionPerformed
        if(ArchivedTable.getSelectedRow() != -1) {
            LogicController.unArchiveEvent(LogicController.getArchivedEventList().get(ArchivedTable.getSelectedRow()));
            GUIUpdater.updateArchivedTable();
            GUIUpdater.updateUnarchivedTable();
        }
    }//GEN-LAST:event_UnarchiveButtonActionPerformed

    private void UnarchivedTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UnarchivedTableMousePressed
        if(UnarchivedTable.getSelectedRow()!=-1) {
            ArchivedTable.clearSelection();
            ArchiveButton.setVisible(true);
            UnarchiveButton.setVisible(false);
        }
    }//GEN-LAST:event_UnarchivedTableMousePressed

    private void ArchivedTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ArchivedTableMousePressed
        if(ArchivedTable.getSelectedRow()!=-1) {
            UnarchivedTable.clearSelection();
            UnarchiveButton.setVisible(true);
            ArchiveButton.setVisible(false);
        }
    }//GEN-LAST:event_ArchivedTableMousePressed

    private void ArchiveButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ArchiveButtonMouseExited
        ArchiveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/rightbutton.png"))); 
    }//GEN-LAST:event_ArchiveButtonMouseExited

    private void ArchiveButtonMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ArchiveButtonMouseMoved
        int x = evt.getX();
        int y = evt.getY();
        double dx = ArchiveButton.getWidth()/2 - x;
        double dy = ArchiveButton.getHeight()/2 - y;
        double sr = Math.sqrt(dx*dx + dy*dy );
        if (sr <= ArchiveButton.getWidth()/2)
            ArchiveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/rightbuttonhover.png")));
        else
            ArchiveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/rightbutton.png")));
    }//GEN-LAST:event_ArchiveButtonMouseMoved

    private void ArchiveButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ArchiveButtonMousePressed
        ArchiveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/rightbuttonclick.png"))); 
    }//GEN-LAST:event_ArchiveButtonMousePressed
                              
    private void UnarchiveButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UnarchiveButtonMouseExited
        UnarchiveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/leftbutton.png"))); 
    }//GEN-LAST:event_UnarchiveButtonMouseExited

    private void UnarchiveButtonMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UnarchiveButtonMouseMoved
        int x = evt.getX();
        int y = evt.getY();
        double dx = UnarchiveButton.getWidth()/2 - x;
        double dy = UnarchiveButton.getHeight()/2 - y;
        double sr = Math.sqrt(dx*dx + dy*dy );
        if (sr <= UnarchiveButton.getWidth()/2)
            UnarchiveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/leftbuttonhover.png")));
        else
            UnarchiveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/leftbutton.png")));
    }//GEN-LAST:event_UnarchiveButtonMouseMoved

    private void UnarchiveButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UnarchiveButtonMousePressed
        UnarchiveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/leftbutton.png"))); 
    }//GEN-LAST:event_UnarchiveButtonMousePressed

    private void ArchiveEventButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ArchiveEventButtonMousePressed

        ArchiveEventButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/submitbuttonclick.png")));
    }//GEN-LAST:event_ArchiveEventButtonMousePressed

    public static javax.swing.JTable getUnarchivedTable(){
        return UnarchivedTable;
    }
    
    public static javax.swing.JTable getArchivedTable(){
        return ArchivedTable;
    }
        
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ArchiveEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ArchiveEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ArchiveEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ArchiveEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                ArchiveEvent dialog = new ArchiveEvent(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ArchiveButton;
    private javax.swing.JPanel ArchiveEventBackground;
    private javax.swing.JButton ArchiveEventButton;
    private static javax.swing.JTable ArchivedTable;
    private javax.swing.JScrollPane ArchivedTableBackground;
    private javax.swing.JLabel NameLabel;
    private javax.swing.JLabel NameLabel1;
    private javax.swing.JButton UnarchiveButton;
    private static javax.swing.JTable UnarchivedTable;
    private javax.swing.JScrollPane UnarchivedTableBackground;
    // End of variables declaration//GEN-END:variables
}
