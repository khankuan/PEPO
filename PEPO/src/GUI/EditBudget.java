
package GUI;

import Logic.Event.Event;
import Logic.LogicController;
import java.awt.Color;
import java.awt.event.MouseEvent;
import java.math.BigDecimal;
import java.text.NumberFormat;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/*
 * @author kuan
 */
public class EditBudget extends javax.swing.JDialog {

    /** Creates new form EditBudget */
    public EditBudget(java.awt.Frame parent, boolean modal,Event e) {
        super(parent, modal);
        initComponents();
        frameparent = parent;
        myEvent = e;
        
        updateEditBudget();

    }
    
    public static String currencyFormat(BigDecimal n) {
        return NumberFormat.getCurrencyInstance().format(n);
    }
    
    public void updateEditBudget(){
        TotalBudgetText.setText(currencyFormat((new BigDecimal(myEvent.getTotalBudget())).divide(new BigDecimal("100"))));
        UnallocatedBudgetText.setText(" "+currencyFormat((new BigDecimal(myEvent.getUnallocatedBudget())).divide(new BigDecimal("100"))));
        if (myEvent.getUnallocatedBudget() < 0)
            UnallocatedBudgetText.setForeground(new java.awt.Color(255, 0, 51));
        else
            UnallocatedBudgetText.setForeground(new java.awt.Color(0, 0, 0));
        ((DefaultTableModel) BudgetCategoryTable.getModel()).setRowCount(myEvent.getBudgetCategoryList().size());
        for (int i = 0; i < myEvent.getBudgetCategoryList().size(); i++){
            BudgetCategoryTable.getModel().setValueAt("  "+myEvent.getBudgetCategoryList().get(i).getName(), i, 0);
            BudgetCategoryTable.getModel().setValueAt(" "+currencyFormat((new BigDecimal(myEvent.getBudgetCategoryList().get(i).getAmount())).divide(new BigDecimal("100"))), i, 1);
            BudgetCategoryTable.getModel().setValueAt(" "+currencyFormat((new BigDecimal(myEvent.getBudgetCategoryList().get(i).getRemainingAmount())).divide(new BigDecimal("100"))), i, 2);
        }
        EditBudgetCategoryButton.setVisible(false);
        DeleteBudgetCategoryButton.setVisible(false);
        TotalBudgetText.transferFocus();
        UnallocatedBudgetText.grabFocus();
        SubmitTotalBudgetButton.setVisible(false);
        BudgetCategoryTableClicked = -1;
        BudgetCategoryTable.clearSelection();
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        EditBudgetBackground = new javax.swing.JPanel();
        SubmitBudgetCategoryButton = new javax.swing.JButton();
        TotalBudgetText = new javax.swing.JTextField();
        TotalBudgetLabel = new javax.swing.JLabel();
        UnallocatedBudgetLabel = new javax.swing.JLabel();
        UnallocatedBudgetText = new javax.swing.JTextField();
        AddBudgetCategoryButton = new javax.swing.JButton();
        EditBudgetCategoryButton = new javax.swing.JButton();
        DeleteBudgetCategoryButton = new javax.swing.JButton();
        ExpenseTableBackground = new javax.swing.JScrollPane();
        BudgetCategoryTable = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false;   //Disallow the editing of any cell
            }
            public String getToolTipText( MouseEvent e )
            {
                int row = rowAtPoint( e.getPoint() );
                int column = columnAtPoint( e.getPoint() );

                Object value = getValueAt(row, column);
                return value == null ? null : value.toString();
            }
        };
        SubmitTotalBudgetButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        EditBudgetBackground.setBackground(new java.awt.Color(227, 227, 227));
        EditBudgetBackground.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));
        EditBudgetBackground.setLayout(null);

        SubmitBudgetCategoryButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/submitbutton.png"))); // NOI18N
        SubmitBudgetCategoryButton.setBorderPainted(false);
        SubmitBudgetCategoryButton.setContentAreaFilled(false);
        SubmitBudgetCategoryButton.setFocusable(false);
        SubmitBudgetCategoryButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                SubmitBudgetCategoryButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                SubmitBudgetCategoryButtonMousePressed(evt);
            }
        });
        SubmitBudgetCategoryButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                SubmitBudgetCategoryButtonMouseMoved(evt);
            }
        });
        SubmitBudgetCategoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitBudgetCategoryButtonActionPerformed(evt);
            }
        });
        EditBudgetBackground.add(SubmitBudgetCategoryButton);
        SubmitBudgetCategoryButton.setBounds(410, 267, 38, 47);

        TotalBudgetText.setFont(new java.awt.Font("Ubuntu Bold", 0, 14));
        TotalBudgetText.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        TotalBudgetText.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        TotalBudgetText.setDisabledTextColor(new java.awt.Color(51, 51, 51));
        TotalBudgetText.setMargin(new java.awt.Insets(5, 5, 5, 5));
        TotalBudgetText.setMinimumSize(new java.awt.Dimension(12, 21));
        TotalBudgetText.setPreferredSize(new java.awt.Dimension(12, 21));
        TotalBudgetText.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        TotalBudgetText.setSelectionColor(new java.awt.Color(255, 204, 51));
        TotalBudgetText.setVerifyInputWhenFocusTarget(false);
        TotalBudgetText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                TotalBudgetTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                TotalBudgetTextFocusLost(evt);
            }
        });
        TotalBudgetText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TotalBudgetTextKeyTyped(evt);
            }
        });
        EditBudgetBackground.add(TotalBudgetText);
        TotalBudgetText.setBounds(120, 11, 100, 30);
        TotalBudgetText.setBorder(BorderFactory.createCompoundBorder(
            TotalBudgetText.getBorder(),
            BorderFactory.createEmptyBorder(0, 5, 0, 5)));
    TotalBudgetText.setHorizontalAlignment(JTextField.CENTER);

    TotalBudgetLabel.setFont(new java.awt.Font("Ubuntu Bold", 0, 14));
    TotalBudgetLabel.setText("Total Budget:");
    EditBudgetBackground.add(TotalBudgetLabel);
    TotalBudgetLabel.setBounds(20, 20, 99, 20);

    UnallocatedBudgetLabel.setFont(new java.awt.Font("Ubuntu Bold", 0, 14));
    UnallocatedBudgetLabel.setText("Unallocated:");
    EditBudgetBackground.add(UnallocatedBudgetLabel);
    UnallocatedBudgetLabel.setBounds(20, 280, 96, 20);

    UnallocatedBudgetText.setBackground(new java.awt.Color(227, 227, 227));
    UnallocatedBudgetText.setEditable(false);
    UnallocatedBudgetText.setFont(new java.awt.Font("Ubuntu Bold", 0, 14));
    UnallocatedBudgetText.setText("1");
    UnallocatedBudgetText.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
    UnallocatedBudgetText.setMargin(new java.awt.Insets(5, 5, 5, 5));
    UnallocatedBudgetText.setSelectedTextColor(new java.awt.Color(0, 0, 0));
    UnallocatedBudgetText.setSelectionColor(new java.awt.Color(255, 204, 51));
    EditBudgetBackground.add(UnallocatedBudgetText);
    UnallocatedBudgetText.setBounds(110, 280, 95, 20);
    UnallocatedBudgetText.setBorder(BorderFactory.createCompoundBorder(
        UnallocatedBudgetText.getBorder(),
        BorderFactory.createEmptyBorder(0, 5, 0, 5)));
UnallocatedBudgetText.setHorizontalAlignment(JTextField.CENTER);

AddBudgetCategoryButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/addbutton.png"))); // NOI18N
AddBudgetCategoryButton.setBorderPainted(false);
AddBudgetCategoryButton.setContentAreaFilled(false);
AddBudgetCategoryButton.setDefaultCapable(false);
AddBudgetCategoryButton.setFocusPainted(false);
AddBudgetCategoryButton.setFocusable(false);
AddBudgetCategoryButton.setMaximumSize(new java.awt.Dimension(38, 38));
AddBudgetCategoryButton.setMinimumSize(new java.awt.Dimension(38, 38));
AddBudgetCategoryButton.setPreferredSize(new java.awt.Dimension(38, 38));
AddBudgetCategoryButton.setRolloverEnabled(false);
AddBudgetCategoryButton.addMouseListener(new java.awt.event.MouseAdapter() {
    public void mouseExited(java.awt.event.MouseEvent evt) {
        AddBudgetCategoryButtonMouseExited(evt);
    }
    public void mousePressed(java.awt.event.MouseEvent evt) {
        AddBudgetCategoryButtonMousePressed(evt);
    }
    });
    AddBudgetCategoryButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
        public void mouseMoved(java.awt.event.MouseEvent evt) {
            AddBudgetCategoryButtonMouseMoved(evt);
        }
    });
    AddBudgetCategoryButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            AddBudgetCategoryButtonActionPerformed(evt);
        }
    });
    EditBudgetBackground.add(AddBudgetCategoryButton);
    AddBudgetCategoryButton.setBounds(410, 10, 38, 39);

    EditBudgetCategoryButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/editbutton.png"))); // NOI18N
    EditBudgetCategoryButton.setBorderPainted(false);
    EditBudgetCategoryButton.setContentAreaFilled(false);
    EditBudgetCategoryButton.setFocusable(false);
    EditBudgetCategoryButton.setMargin(new java.awt.Insets(1, 14, 1, 14));
    EditBudgetCategoryButton.setMaximumSize(new java.awt.Dimension(41, 41));
    EditBudgetCategoryButton.setMinimumSize(new java.awt.Dimension(41, 41));
    EditBudgetCategoryButton.setPreferredSize(new java.awt.Dimension(41, 41));
    EditBudgetCategoryButton.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseExited(java.awt.event.MouseEvent evt) {
            EditBudgetCategoryButtonMouseExited(evt);
        }
        public void mousePressed(java.awt.event.MouseEvent evt) {
            EditBudgetCategoryButtonMousePressed(evt);
        }
    });
    EditBudgetCategoryButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
        public void mouseMoved(java.awt.event.MouseEvent evt) {
            EditBudgetCategoryButtonMouseMoved(evt);
        }
    });
    EditBudgetCategoryButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            EditBudgetCategoryButtonActionPerformed(evt);
        }
    });
    EditBudgetBackground.add(EditBudgetCategoryButton);
    EditBudgetCategoryButton.setBounds(370, 10, 41, 39);

    DeleteBudgetCategoryButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/deletebutton.png"))); // NOI18N
    DeleteBudgetCategoryButton.setBorderPainted(false);
    DeleteBudgetCategoryButton.setContentAreaFilled(false);
    DeleteBudgetCategoryButton.setFocusable(false);
    DeleteBudgetCategoryButton.setMargin(new java.awt.Insets(1, 14, 1, 14));
    DeleteBudgetCategoryButton.setMaximumSize(new java.awt.Dimension(41, 41));
    DeleteBudgetCategoryButton.setMinimumSize(new java.awt.Dimension(41, 41));
    DeleteBudgetCategoryButton.setPreferredSize(new java.awt.Dimension(41, 41));
    DeleteBudgetCategoryButton.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseExited(java.awt.event.MouseEvent evt) {
            DeleteBudgetCategoryButtonMouseExited(evt);
        }
        public void mousePressed(java.awt.event.MouseEvent evt) {
            DeleteBudgetCategoryButtonMousePressed(evt);
        }
    });
    DeleteBudgetCategoryButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
        public void mouseMoved(java.awt.event.MouseEvent evt) {
            DeleteBudgetCategoryButtonMouseMoved(evt);
        }
    });
    DeleteBudgetCategoryButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            DeleteBudgetCategoryButtonActionPerformed(evt);
        }
    });
    EditBudgetBackground.add(DeleteBudgetCategoryButton);
    DeleteBudgetCategoryButton.setBounds(330, 10, 41, 39);

    ExpenseTableBackground.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

    BudgetCategoryTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 0));
    BudgetCategoryTable.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
    BudgetCategoryTable.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {

        },
        new String [] {
            " Category", " Amount", " Remaining"
        }
    ) {
        boolean[] canEdit = new boolean [] {
            false, false, false
        };

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    BudgetCategoryTable.setFocusable(false);
    BudgetCategoryTable.setGridColor(new java.awt.Color(0, 153, 51));
    BudgetCategoryTable.setIntercellSpacing(new java.awt.Dimension(0, 0));
    BudgetCategoryTable.setRowHeight(20);
    BudgetCategoryTable.setSelectionBackground(new java.awt.Color(255, 204, 51));
    BudgetCategoryTable.setSelectionForeground(new java.awt.Color(0, 0, 0));
    BudgetCategoryTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
    BudgetCategoryTable.setShowHorizontalLines(false);
    BudgetCategoryTable.setShowVerticalLines(false);
    BudgetCategoryTable.setUpdateSelectionOnSort(false);
    BudgetCategoryTable.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            BudgetCategoryTableMouseClicked(evt);
        }
        public void mouseExited(java.awt.event.MouseEvent evt) {
            BudgetCategoryTableMouseExited(evt);
        }
    });
    BudgetCategoryTable.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
        public void mouseMoved(java.awt.event.MouseEvent evt) {
            BudgetCategoryTableMouseMoved(evt);
        }
    });
    ExpenseTableBackground.setViewportView(BudgetCategoryTable);
    BudgetCategoryTable.getColumnModel().getColumn(0).setPreferredWidth(200);
    BudgetCategoryTable.getColumnModel().getColumn(0).setMinWidth(200);
    BudgetCategoryTable.getColumnModel().getColumn(0).setMaxWidth(200);

    BudgetCategoryTable.getColumnModel().getColumn(1).setPreferredWidth(120);
    BudgetCategoryTable.getColumnModel().getColumn(1).setMinWidth(120);
    BudgetCategoryTable.getColumnModel().getColumn(1).setMaxWidth(120);

    BudgetCategoryTable.getColumnModel().getColumn(2).setPreferredWidth(120);
    BudgetCategoryTable.getColumnModel().getColumn(2).setMinWidth(120);
    BudgetCategoryTable.getColumnModel().getColumn(2).setMaxWidth(120);

    BudgetCategoryTable.getTableHeader().setFont(new java.awt.Font("Ubuntu Bold", 0, 14));
    DefaultTableCellRenderer newrendererPriority = new DefaultTableCellRenderer();
    newrendererPriority.setBackground(new Color(51,51,51));
    newrendererPriority.setForeground(Color.white);
    BudgetCategoryTable.getTableHeader().setDefaultRenderer(newrendererPriority);
    BudgetCategoryTable.getTableHeader().setReorderingAllowed(false);

    EditBudgetBackground.add(ExpenseTableBackground);
    ExpenseTableBackground.setBounds(10, 54, 439, 210);

    SubmitTotalBudgetButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/submitbutton.png"))); // NOI18N
    SubmitTotalBudgetButton.setAlignmentY(0.0F);
    SubmitTotalBudgetButton.setBorderPainted(false);
    SubmitTotalBudgetButton.setContentAreaFilled(false);
    SubmitTotalBudgetButton.setFocusable(false);
    SubmitTotalBudgetButton.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseExited(java.awt.event.MouseEvent evt) {
            SubmitTotalBudgetButtonMouseExited(evt);
        }
        public void mousePressed(java.awt.event.MouseEvent evt) {
            SubmitTotalBudgetButtonMousePressed(evt);
        }
    });
    SubmitTotalBudgetButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
        public void mouseMoved(java.awt.event.MouseEvent evt) {
            SubmitTotalBudgetButtonMouseMoved(evt);
        }
    });
    SubmitTotalBudgetButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            SubmitTotalBudgetButtonActionPerformed(evt);
        }
    });
    EditBudgetBackground.add(SubmitTotalBudgetButton);
    SubmitTotalBudgetButton.setBounds(230, 10, 39, 39);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(EditBudgetBackground, javax.swing.GroupLayout.DEFAULT_SIZE, 461, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(EditBudgetBackground, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TotalBudgetTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TotalBudgetTextFocusLost
        TotalBudgetText.setSelectionStart(TotalBudgetText.getText().length());
        SubmitTotalBudgetButton.setVisible(false);
    }//GEN-LAST:event_TotalBudgetTextFocusLost

    private void TotalBudgetTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TotalBudgetTextFocusGained
        TotalBudgetText.setSelectionStart(0);
        SubmitTotalBudgetButton.setVisible(true);
        TotalBudgetText.setSelectionEnd(TotalBudgetText.getText().length());
    }//GEN-LAST:event_TotalBudgetTextFocusGained

    private void BudgetCategoryTableMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BudgetCategoryTableMouseExited
        if (BudgetCategoryTableClicked == -1)
            BudgetCategoryTable.clearSelection();
    }//GEN-LAST:event_BudgetCategoryTableMouseExited

    private void BudgetCategoryTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BudgetCategoryTableMouseClicked
        
        if (BudgetCategoryTableClicked == -1){
            BudgetCategoryTableClicked = BudgetCategoryTable.rowAtPoint(evt.getPoint());
            DeleteBudgetCategoryButton.setVisible(true);
            EditBudgetCategoryButton.setVisible(true);
        } else {
            if (BudgetCategoryTable.rowAtPoint(evt.getPoint()) == BudgetCategoryTableClicked){
                BudgetCategoryTableClicked = -1;
                BudgetCategoryTable.clearSelection();
                DeleteBudgetCategoryButton.setVisible(false);
                EditBudgetCategoryButton.setVisible(false);
                
                return;
            } else {
                BudgetCategoryTableClicked = BudgetCategoryTable.rowAtPoint(evt.getPoint());
            }
                
        }
    }//GEN-LAST:event_BudgetCategoryTableMouseClicked

    private void BudgetCategoryTableMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BudgetCategoryTableMouseMoved
  
        if (BudgetCategoryTableClicked == -1 && BudgetCategoryTable.rowAtPoint(evt.getPoint()) >= 0){
            int at = BudgetCategoryTable.rowAtPoint(evt.getPoint());
            if (at != -1)
                BudgetCategoryTable.setRowSelectionInterval(at, at);
            else if (BudgetCategoryTableClicked == -1)
                BudgetCategoryTable.clearSelection();
        }
    }//GEN-LAST:event_BudgetCategoryTableMouseMoved

    private void EditBudgetCategoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditBudgetCategoryButtonActionPerformed

        EditBudgetCategory editbc = new EditBudgetCategory(frameparent, true,myEvent.getBudgetCategoryList().get(BudgetCategoryTable.getSelectedRow()));
        editbc.setTitle("Edit Budget Category");
        editbc.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        editbc.setLocationRelativeTo(null);

        //Display the window.
        editbc.pack();
        editbc.setVisible(true);
        updateEditBudget();
    }//GEN-LAST:event_EditBudgetCategoryButtonActionPerformed

    private void DeleteBudgetCategoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBudgetCategoryButtonActionPerformed
        int n = JOptionPane.showConfirmDialog(this,
        "Delete "+myEvent.getBudgetCategoryList().get(BudgetCategoryTable.getSelectedRow()).getName()+"?",
        "Confirmation",
        JOptionPane.YES_NO_OPTION);
        if (n == 0){        
            try {
                LogicController.deleteBudgetCategory(myEvent.getBudgetCategoryList().get(BudgetCategoryTable.getSelectedRow()));
                updateEditBudget();
            } catch (Exception ex) {
                
            }
        }
        updateEditBudget();
    }//GEN-LAST:event_DeleteBudgetCategoryButtonActionPerformed

    private void DeleteBudgetCategoryButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeleteBudgetCategoryButtonMouseExited
        DeleteBudgetCategoryButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/deletebutton.png")));
    }//GEN-LAST:event_DeleteBudgetCategoryButtonMouseExited

    private void DeleteBudgetCategoryButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeleteBudgetCategoryButtonMousePressed
        DeleteBudgetCategoryButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/deletebuttonclick.png")));
    }//GEN-LAST:event_DeleteBudgetCategoryButtonMousePressed

    private void DeleteBudgetCategoryButtonMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeleteBudgetCategoryButtonMouseMoved
        int x = evt.getX();
        int y = evt.getY();
        double dx = DeleteBudgetCategoryButton.getWidth()/2 - x;
        double dy = DeleteBudgetCategoryButton.getHeight()/2 - y;
        double sr = Math.sqrt(dx*dx + dy*dy );
        if (sr <= DeleteBudgetCategoryButton.getWidth()/2)
            DeleteBudgetCategoryButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/deletebuttonhover.png")));
        else
            DeleteBudgetCategoryButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/deletebutton.png")));
    }//GEN-LAST:event_DeleteBudgetCategoryButtonMouseMoved

    private void EditBudgetCategoryButtonMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditBudgetCategoryButtonMouseMoved
        int x = evt.getX();
        int y = evt.getY();
        double dx = EditBudgetCategoryButton.getWidth()/2 - x;
        double dy = EditBudgetCategoryButton.getHeight()/2 - y;
        double sr = Math.sqrt(dx*dx + dy*dy );
        if (sr <= EditBudgetCategoryButton.getWidth()/2)
            EditBudgetCategoryButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/editbuttonhover.png")));
        else
            EditBudgetCategoryButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/editbutton.png")));
    }//GEN-LAST:event_EditBudgetCategoryButtonMouseMoved

    private void EditBudgetCategoryButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditBudgetCategoryButtonMouseExited
        EditBudgetCategoryButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/editbutton.png")));
    }//GEN-LAST:event_EditBudgetCategoryButtonMouseExited

    private void EditBudgetCategoryButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditBudgetCategoryButtonMousePressed
        EditBudgetCategoryButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/editbuttonclick.png")));
    }//GEN-LAST:event_EditBudgetCategoryButtonMousePressed

    private void AddBudgetCategoryButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddBudgetCategoryButtonMouseExited
        AddBudgetCategoryButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/addbutton.png")));
    }//GEN-LAST:event_AddBudgetCategoryButtonMouseExited

    private void AddBudgetCategoryButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddBudgetCategoryButtonMousePressed
        AddBudgetCategoryButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/addbuttonclick.png")));
    }//GEN-LAST:event_AddBudgetCategoryButtonMousePressed

    private void AddBudgetCategoryButtonMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddBudgetCategoryButtonMouseMoved
        int x = evt.getX();
        int y = evt.getY();
        double dx = AddBudgetCategoryButton.getWidth()/2 - x;
        double dy = AddBudgetCategoryButton.getHeight()/2 - y;
        double sr = Math.sqrt(dx*dx + dy*dy );
        if (sr <= AddBudgetCategoryButton.getWidth()/2)
            AddBudgetCategoryButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/addbuttonhover.png")));
        else
            AddBudgetCategoryButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/addbutton.png")));
  
    }//GEN-LAST:event_AddBudgetCategoryButtonMouseMoved

    private void SubmitBudgetCategoryButtonMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SubmitBudgetCategoryButtonMouseMoved
        int x = evt.getX();
        int y = evt.getY();
        double dx = SubmitBudgetCategoryButton.getWidth()/2 - x;
        double dy = SubmitBudgetCategoryButton.getHeight()/2 - y;
        double sr = Math.sqrt(dx*dx + dy*dy );
        if (sr <= SubmitBudgetCategoryButton.getWidth()/2)
            SubmitBudgetCategoryButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/submitbuttonhover.png")));
        else
            SubmitBudgetCategoryButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/submitbutton.png")));
  
    }//GEN-LAST:event_SubmitBudgetCategoryButtonMouseMoved

    private void SubmitBudgetCategoryButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SubmitBudgetCategoryButtonMouseExited
        SubmitBudgetCategoryButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/submitbutton.png")));
    }//GEN-LAST:event_SubmitBudgetCategoryButtonMouseExited

    private void SubmitBudgetCategoryButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SubmitBudgetCategoryButtonMousePressed
        SubmitBudgetCategoryButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/submitbuttonclick.png")));
    }//GEN-LAST:event_SubmitBudgetCategoryButtonMousePressed

    private void SubmitBudgetCategoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitBudgetCategoryButtonActionPerformed
        try {
            String input = TotalBudgetText.getText();
            if (TotalBudgetText.getText().length() == 0){
                LogicController.setEventTotalBudget(PEPOGUI.getSelectedEvent(),0);
            } else {
                if (TotalBudgetText.getText().charAt(0) == '$')
                    input = input.substring(1);   
                if (input.length() > 0){
                    BigDecimal amount = new BigDecimal(input.replaceAll(",", ""));
                    if (amount.doubleValue() > 9999999){
                        JOptionPane.showMessageDialog(this, "Oops, amount too long...", "Amount too long", JOptionPane.PLAIN_MESSAGE);             
                        GUIUpdater.updateTotalBudget();
                        TotalBudgetText.setSelectionStart(0);
                        TotalBudgetText.setSelectionEnd(TotalBudgetText.getText().length());
                        return;  
                    }
                    if (amount.doubleValue() < 0){
                        JOptionPane.showMessageDialog(this, "Oops, amount can't be negative...", "Negative amount", JOptionPane.PLAIN_MESSAGE);             
                        GUIUpdater.updateTotalBudget();
                        TotalBudgetText.setSelectionStart(0);
                        TotalBudgetText.setSelectionEnd(TotalBudgetText.getText().length());
                        return;  
                    }

                    LogicController.setEventTotalBudget(PEPOGUI.getSelectedEvent(),amount.multiply(new BigDecimal("100")).toBigInteger().longValue());
                }
                else
                    LogicController.setEventTotalBudget(PEPOGUI.getSelectedEvent(),0);

            }
        } catch (Exception exp) {             
            JOptionPane.showMessageDialog(this, "Oops, amount seems wrong...", "Amount error", JOptionPane.PLAIN_MESSAGE);             
            GUIUpdater.updateTotalBudget();
            TotalBudgetText.setSelectionStart(0);
            TotalBudgetText.setSelectionEnd(TotalBudgetText.getText().length());
            return;         
        }  

        TotalBudgetText.setBackground(new Color(255,255,255));
        TotalBudgetText.transferFocus();
        this.dispose();
    }//GEN-LAST:event_SubmitBudgetCategoryButtonActionPerformed

    private void AddBudgetCategoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddBudgetCategoryButtonActionPerformed
        AddBudgetCategory addtbc = new AddBudgetCategory(frameparent, true,myEvent);
        addtbc.setTitle("Add Budget Category");
        addtbc.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        addtbc.setLocationRelativeTo(null);

        //Display the window.
        addtbc.pack();
        addtbc.setVisible(true);
        updateEditBudget();
    }//GEN-LAST:event_AddBudgetCategoryButtonActionPerformed

    private void SubmitTotalBudgetButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SubmitTotalBudgetButtonMouseExited
        SubmitTotalBudgetButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/submitbutton.png")));
    }//GEN-LAST:event_SubmitTotalBudgetButtonMouseExited

    private void SubmitTotalBudgetButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SubmitTotalBudgetButtonMousePressed
        SubmitTotalBudgetButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/submitbuttonclick.png")));
    }//GEN-LAST:event_SubmitTotalBudgetButtonMousePressed

    private void SubmitTotalBudgetButtonMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SubmitTotalBudgetButtonMouseMoved
        int x = evt.getX();
        int y = evt.getY();
        double dx = SubmitTotalBudgetButton.getWidth()/2 - x;
        double dy = SubmitTotalBudgetButton.getHeight()/2 - y;
        double sr = Math.sqrt(dx*dx + dy*dy );
        if (sr <= SubmitTotalBudgetButton.getWidth()/2)
            SubmitTotalBudgetButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/submitbuttonhover.png")));
        else
            SubmitTotalBudgetButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/submitbutton.png")));
    }//GEN-LAST:event_SubmitTotalBudgetButtonMouseMoved

    private void SubmitTotalBudgetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitTotalBudgetButtonActionPerformed
        try {
                String input = TotalBudgetText.getText();
                if (TotalBudgetText.getText().length() == 0){
                    LogicController.setEventTotalBudget(PEPOGUI.getSelectedEvent(),0);
                } else {
                    if (TotalBudgetText.getText().charAt(0) == '$')
                        input = input.substring(1);   
                    if (input.length() > 0){
                        BigDecimal amount = new BigDecimal(input.replaceAll(",", ""));
                        if (amount.doubleValue() > 9999999){
                            JOptionPane.showMessageDialog(this, "Oops, amount too long...", "Amount too long", JOptionPane.PLAIN_MESSAGE);             
                            GUIUpdater.updateTotalBudget();
                            TotalBudgetText.setSelectionStart(0);
                            TotalBudgetText.setSelectionEnd(TotalBudgetText.getText().length());
                            return;  
                        }
                        if (amount.doubleValue() < 0){
                            JOptionPane.showMessageDialog(this, "Oops, amount can't be negative...", "Negative amount", JOptionPane.PLAIN_MESSAGE);             
                            GUIUpdater.updateTotalBudget();
                            TotalBudgetText.setSelectionStart(0);
                            TotalBudgetText.setSelectionEnd(TotalBudgetText.getText().length());
                            return;  
                        }
                        
                        LogicController.setEventTotalBudget(PEPOGUI.getSelectedEvent(),amount.multiply(new BigDecimal("100")).toBigInteger().longValue());
                    }
                    else
                        LogicController.setEventTotalBudget(PEPOGUI.getSelectedEvent(),0);

                }
            } catch (Exception exp) {             
                JOptionPane.showMessageDialog(this, "Oops, amount seems wrong...", "Amount error", JOptionPane.PLAIN_MESSAGE);             
                GUIUpdater.updateTotalBudget();
                TotalBudgetText.setSelectionStart(0);
                TotalBudgetText.setSelectionEnd(TotalBudgetText.getText().length());
                return;         
            }  

            TotalBudgetText.setBackground(new Color(255,255,255));
            TotalBudgetText.transferFocus();
            updateEditBudget();
    }//GEN-LAST:event_SubmitTotalBudgetButtonActionPerformed

    private void TotalBudgetTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TotalBudgetTextKeyTyped
        if (evt.getKeyChar() == 10){
            try {
                String input = TotalBudgetText.getText();
                if (TotalBudgetText.getText().length() == 0){
                    LogicController.setEventTotalBudget(PEPOGUI.getSelectedEvent(),0);
                } else {
                    if (TotalBudgetText.getText().charAt(0) == '$')
                        input = input.substring(1);   
                    if (input.length() > 0){
                        BigDecimal amount = new BigDecimal(input);
                        if (amount.doubleValue() > 9999999){
                            JOptionPane.showMessageDialog(this, "Oops, amount too long...", "Amount too long", JOptionPane.PLAIN_MESSAGE);             
                            GUIUpdater.updateTotalBudget();
                            TotalBudgetText.setSelectionStart(0);
                            TotalBudgetText.setSelectionEnd(TotalBudgetText.getText().length());
                            return;  
                        }
                        if (amount.doubleValue() < 0){
                            JOptionPane.showMessageDialog(this, "Oops, amount can't be negative...", "Negative amount", JOptionPane.PLAIN_MESSAGE);             
                            GUIUpdater.updateTotalBudget();
                            TotalBudgetText.setSelectionStart(0);
                            TotalBudgetText.setSelectionEnd(TotalBudgetText.getText().length());
                            return;  
                        }
                        
                        LogicController.setEventTotalBudget(PEPOGUI.getSelectedEvent(),amount.multiply(new BigDecimal("100")).toBigInteger().longValue());
                    }
                    else
                        LogicController.setEventTotalBudget(PEPOGUI.getSelectedEvent(),0);

                }
            } catch (Exception exp) {             
                JOptionPane.showMessageDialog(this, "Oops, amount seems wrong...", "Amount error", JOptionPane.PLAIN_MESSAGE);             
                GUIUpdater.updateTotalBudget();
                TotalBudgetText.setSelectionStart(0);
                TotalBudgetText.setSelectionEnd(TotalBudgetText.getText().length());
                return;         
            }  

            TotalBudgetText.setBackground(new Color(255,255,255));
            TotalBudgetText.transferFocus();
            updateEditBudget();
        }
    }//GEN-LAST:event_TotalBudgetTextKeyTyped

    Event myEvent;
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditBudget.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditBudget.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditBudget.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditBudget.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                EditBudget dialog = new EditBudget(new javax.swing.JFrame(), true,null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    java.awt.Frame frameparent;
    int BudgetCategoryTableClicked = -1;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JButton AddBudgetCategoryButton;
    private static javax.swing.JTable BudgetCategoryTable;
    private static javax.swing.JButton DeleteBudgetCategoryButton;
    private javax.swing.JPanel EditBudgetBackground;
    private static javax.swing.JButton EditBudgetCategoryButton;
    private static javax.swing.JScrollPane ExpenseTableBackground;
    private javax.swing.JButton SubmitBudgetCategoryButton;
    private javax.swing.JButton SubmitTotalBudgetButton;
    private static javax.swing.JLabel TotalBudgetLabel;
    private javax.swing.JTextField TotalBudgetText;
    private static javax.swing.JLabel UnallocatedBudgetLabel;
    private static javax.swing.JTextField UnallocatedBudgetText;
    // End of variables declaration//GEN-END:variables
}
